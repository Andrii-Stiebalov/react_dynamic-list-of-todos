{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","viewModule","className","map","todo","id","title","completed","type","onClick","TodoFilter","query","setQuery","filterBy","setFilterBy","onSubmit","event","preventDefault","onChange","target","value","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectTodo","useState","selectedUser","setSelectedUser","selectedTodo","undefined","userId","useEffect","getUser","result","href","email","name","App","setTodos","selectTodoId","setSelectTodoId","filterTodos","filter","toLowerCase","includes","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28abdb57.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  viewModule: (id: number) => void\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, viewModule }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={id}>\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => viewModule(id)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  query: string,\n  setQuery: (value: string) => void,\n  filterBy: string;\n  setFilterBy: (value: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  filterBy,\n  setFilterBy,\n}) => (\n  <form\n    className=\"field has-addons\"\n    onSubmit={(event => event.preventDefault())}\n  >\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={event => setFilterBy(event.target.value)}\n          value={filterBy}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        value={query}\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {!!query.length && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectTodo: () => Todo | undefined;\n  viewModule: (id :number) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectTodo, viewModule }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const selectedTodo = selectTodo();\n\n  if (selectedTodo === undefined) {\n    return null;\n  }\n\n  const {\n    userId,\n    id,\n    title,\n    completed,\n  } = selectedTodo;\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useEffect(() => {\n    getUser(userId)\n      .then(result => setSelectedUser(result));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => viewModule(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={selectedUser.email}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectTodoId, setSelectTodoId] = useState<number>(0);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState('All');\n\n  // const filterTodos = (todosFromServer: Todo[]) => {\n  //   const filteredTodos = todosFromServer.filter(todo => todo.title.includes(query));\n\n  //   return filteredTodos;\n  // };\n\n  useEffect(() => {\n    getTodos()\n      .then(result => setTodos(result));\n  }, []);\n\n  const viewModule = (id: number) => {\n    setSelectTodoId(id);\n  };\n\n  const onSetQuery = (value: string) => setQuery(value);\n\n  const selectTodo = () => todos.find(todo => todo.id === selectTodoId);\n\n  const onSetFilterBy = (value: string) => {\n    setFilterBy(value);\n  };\n\n  const filterTodos = todos\n    .filter(({ completed }) => {\n      switch (filterBy) {\n        case 'active':\n          return !completed;\n\n        case 'completed':\n          return completed;\n\n        default:\n          return true;\n      }\n    })\n    .filter(({ title }) => (\n      title.toLowerCase()\n        .includes(query.toLowerCase())\n    ));\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={onSetQuery}\n                filterBy={filterBy}\n                setFilterBy={onSetFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : <TodoList todos={filterTodos} viewModule={viewModule} />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectTodoId && (<TodoModal selectTodo={selectTodo} viewModule={viewModule} />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}